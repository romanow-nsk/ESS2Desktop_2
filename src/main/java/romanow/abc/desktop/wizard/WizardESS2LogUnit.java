/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package romanow.abc.desktop.wizard;

import romanow.abc.core.entity.EntityRefList;
import romanow.abc.core.entity.subject2area.ESS2Architecture;
import romanow.abc.core.entity.subject2area.ESS2Device;
import romanow.abc.core.entity.subject2area.ESS2Entity;
import romanow.abc.core.entity.subject2area.ESS2LogUnit;
import romanow.abc.desktop.ESSMetaPanel;
import romanow.abc.desktop.MainBaseFrame;

/**
 *
 * @author romanow0
 */
public class WizardESS2LogUnit extends WizardBaseViewDB {

    private ESS2LogUnit logUnit;
    private EntityRefList<ESS2Device> devices;
    public WizardESS2LogUnit(ESSMetaPanel frame0, ESS2Entity entity0, EntityRefList<ESS2Device> devices0, I_Wizard back0) {
        super("Лог.устройство",frame0,entity0,back0);
        initComponents();
        logUnit = (ESS2LogUnit) entity0;
        LogUnit.setText(""+logUnit.getUnit());
        SnapShotDisable.setSelected(logUnit.isSnapShotDisable());
        setSize(750,230);
        devices = devices0;
        Devices.removeAll();
        Devices.add("...");
        for(ESS2Device device : devices){
            Devices.add(device.getTitle());
            }
        Devices.select(0);
        int i=1;
        for(ESS2Device device : devices){
            if (device.getOid()==logUnit.getDevice().getOid()){
                Devices.select(i);
                break;
                }
            i++;
            }
        }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSeparator1 = new javax.swing.JSeparator();
        LogUnit = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        Devices = new java.awt.Choice();
        SetDevice = new javax.swing.JButton();
        SnapShotDisable = new javax.swing.JCheckBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        getContentPane().setLayout(null);
        getContentPane().add(jSeparator1);
        jSeparator1.setBounds(10, 120, 460, 2);

        LogUnit.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                LogUnitKeyPressed(evt);
            }
        });
        getContentPane().add(LogUnit);
        LogUnit.setBounds(430, 130, 40, 25);

        jLabel1.setText("Unit");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(400, 135, 40, 14);
        getContentPane().add(Devices);
        Devices.setBounds(10, 130, 330, 20);

        SetDevice.setIcon(new javax.swing.ImageIcon(getClass().getResource("/drawable/save.png"))); // NOI18N
        SetDevice.setBorderPainted(false);
        SetDevice.setContentAreaFilled(false);
        SetDevice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SetDeviceActionPerformed(evt);
            }
        });
        getContentPane().add(SetDevice);
        SetDevice.setBounds(350, 125, 40, 30);

        SnapShotDisable.setText("Запрещение  SnapShot");
        SnapShotDisable.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                SnapShotDisableItemStateChanged(evt);
            }
        });
        getContentPane().add(SnapShotDisable);
        SnapShotDisable.setBounds(480, 130, 180, 23);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void LogUnitKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_LogUnitKeyPressed
        onKeyPressed("logUnit", LogUnit, evt, new I_WizardAction() {
            @Override
            public void onAction(int value) {
                logUnit.setUnit(value);
                }
            });
    }//GEN-LAST:event_LogUnitKeyPressed

    private void SetDeviceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SetDeviceActionPerformed
        int idx = Devices.getSelectedIndex();
        if (idx==0){
            logUnit.getDevice().setOid(0);
            oneUpdate("Удалена ссылка на драйвер");
            }
        else{
            logUnit.getDevice().setOidRef(devices.get(idx-1));
            oneUpdate("Изменено device: "+devices.get(idx-1).toString());
            }
    }//GEN-LAST:event_SetDeviceActionPerformed

    private void SnapShotDisableItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_SnapShotDisableItemStateChanged
        logUnit.setSnapShotDisable(SnapShotDisable.isSelected());
        oneUpdate("Изменено snapShotEnable: "+logUnit.isSnapShotDisable());
    }//GEN-LAST:event_SnapShotDisableItemStateChanged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(WizardESS2LogUnit.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(WizardESS2LogUnit.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(WizardESS2LogUnit.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(WizardESS2LogUnit.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                //new WizardESS2Connector().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private java.awt.Choice Devices;
    private javax.swing.JTextField LogUnit;
    private javax.swing.JButton SetDevice;
    private javax.swing.JCheckBox SnapShotDisable;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JSeparator jSeparator1;
    // End of variables declaration//GEN-END:variables
}
