/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package romanow.abc.desktop.wizard;

import com.google.gson.Gson;
import okhttp3.MultipartBody;
import retrofit2.Call;
import romanow.abc.core.API.RestAPICommon;
import romanow.abc.core.DBRequest;
import romanow.abc.core.constants.Values;
import romanow.abc.core.entity.artifacts.Artifact;
import romanow.abc.core.entity.baseentityes.JEmpty;
import romanow.abc.core.entity.baseentityes.JLong;
import romanow.abc.core.entity.subject2area.*;
import romanow.abc.core.utils.FileNameExt;
import romanow.abc.desktop.APICall;
import romanow.abc.desktop.ESSMetaPanel;
import romanow.abc.desktop.MainBaseFrame;

/**
 *
 * @author romanow0
 */
public class WizardESS2ЗProfilerModule extends WizardBaseViewDB {

    private ESS2ProfilerModule module;
    public WizardESS2ЗProfilerModule(ESSMetaPanel frame0, ESS2Entity entity0, I_Wizard back0) {
        super("Модуль профилирования",frame0,entity0,back0);
        initComponents();
        module = (ESS2ProfilerModule) entity0;
        ClassName.setText(module.getClassName());
        Enabled.setSelected(module.isEnable());
        Trace.setSelected(module.isTrace());
        DataFile.setText(module.getProfileData().getTitle());
        setSize(750,200);
        }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jCheckBox1 = new javax.swing.JCheckBox();
        jSeparator1 = new javax.swing.JSeparator();
        Enabled = new javax.swing.JCheckBox();
        Trace = new javax.swing.JCheckBox();
        ClassName = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        SelectDataFile = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        DataFile = new javax.swing.JTextField();

        jCheckBox1.setText("jCheckBox1");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        getContentPane().setLayout(null);
        getContentPane().add(jSeparator1);
        jSeparator1.setBounds(10, 83, 560, 10);

        Enabled.setText("Включено");
        Enabled.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                EnabledItemStateChanged(evt);
            }
        });
        getContentPane().add(Enabled);
        Enabled.setBounds(300, 95, 80, 20);

        Trace.setText("Трассировка");
        Trace.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                TraceItemStateChanged(evt);
            }
        });
        getContentPane().add(Trace);
        Trace.setBounds(420, 95, 130, 20);

        ClassName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                ClassNameKeyPressed(evt);
            }
        });
        getContentPane().add(ClassName);
        ClassName.setBounds(100, 90, 180, 25);

        jLabel4.setText("Класс (Java)");
        getContentPane().add(jLabel4);
        jLabel4.setBounds(10, 95, 80, 16);

        SelectDataFile.setIcon(new javax.swing.ImageIcon(getClass().getResource("/drawable/upload.png"))); // NOI18N
        SelectDataFile.setBorderPainted(false);
        SelectDataFile.setContentAreaFilled(false);
        SelectDataFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SelectDataFileActionPerformed(evt);
            }
        });
        getContentPane().add(SelectDataFile);
        SelectDataFile.setBounds(420, 125, 30, 30);

        jLabel6.setText("Файл данных");
        getContentPane().add(jLabel6);
        jLabel6.setBounds(470, 130, 110, 16);
        getContentPane().add(jSeparator2);
        jSeparator2.setBounds(0, 163, 630, 10);

        DataFile.setEnabled(false);
        getContentPane().add(DataFile);
        DataFile.setBounds(10, 130, 400, 22);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void EnabledItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_EnabledItemStateChanged
        module.setEnable(Enabled.isSelected());
        oneUpdate("Изменено enable="+Enabled.isSelected());
    }//GEN-LAST:event_EnabledItemStateChanged

    private void TraceItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_TraceItemStateChanged
        module.setTrace(Trace.isSelected());
        oneUpdate("Изменено trace="+Trace.isSelected());

    }//GEN-LAST:event_TraceItemStateChanged

    private void ClassNameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ClassNameKeyPressed
        onStringKeyPressed("ClassName", ClassName, evt, new I_WizardActionString() {
            @Override
            public void onAction(String value) {
                module.setClassName(value);
            }
        });
    }//GEN-LAST:event_ClassNameKeyPressed

    private void SelectDataFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SelectDataFileActionPerformed
        FileNameExt fname = main.getInputFileName("Импорт данных профилирования", "*.xlsx", null);
        final MultipartBody.Part body = RestAPICommon.createMultipartBody(fname);
        new APICall<Artifact>(main) {
            @Override
            public Call<Artifact> apiFun() {
                return main.getService().upload(main.getDebugToken(), "Profile Data import", fname.fileName(), body);
                }
            @Override
            public void onSucess(final Artifact oo) {
                final long oldOId = module.getProfileData().getOid();
                module.getProfileData().setOidRef(oo);
                DataFile.setText(module.getProfileData().getTitle());
                oneUpdate("Изменено profileData "+DataFile.getText());
                if (oldOId!=0)
                     new APICall<JEmpty>(main) {
                     @Override
                     public Call<JEmpty> apiFun() {
                          return main.getService().removeArtifact(main.getDebugToken(),oldOId);
                          }
                     @Override
                     public void onSucess(JEmpty oo) {}
                };

            }
        };

        /*
        FileNameExt fileNameExt = main.getInputFileName("Файл данных профилирования","*.xls","");
        if (fileNameExt==null)
            return;
        DataFile.setText(fileNameExt.fullName());
        module.setFilePath(DataFile.getText());
        oneUpdate("Изменено filePath "+DataFile.getText());
         */
    }//GEN-LAST:event_SelectDataFileActionPerformed


    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(WizardESS2ЗProfilerModule.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(WizardESS2ЗProfilerModule.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(WizardESS2ЗProfilerModule.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(WizardESS2ЗProfilerModule.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                //new WizardESS2Connector().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField ClassName;
    private javax.swing.JTextField DataFile;
    private javax.swing.JCheckBox Enabled;
    private javax.swing.JButton SelectDataFile;
    private javax.swing.JCheckBox Trace;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    // End of variables declaration//GEN-END:variables
}
