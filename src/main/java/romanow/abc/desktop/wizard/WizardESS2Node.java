/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package romanow.abc.desktop.wizard;

import romanow.abc.core.entity.subject2area.ESS2Architecture;
import romanow.abc.core.entity.subject2area.ESS2Entity;
import romanow.abc.core.entity.subject2area.ESS2Node;
import romanow.abc.desktop.ESSMetaPanel;
import romanow.abc.desktop.MainBaseFrame;

/**
 *
 * @author romanow0
 */
public class WizardESS2Node extends WizardBaseViewDB {

    private ESS2Node node;
    public WizardESS2Node(ESSMetaPanel frame0, ESS2Entity entity0, I_Wizard back0) {
        super(frame0,entity0,back0);
        initComponents();
        setSize(750,170);
        node = (ESS2Node)entity0;
        IP.setText(node.getESSServerIP());
        Port.setText(""+node.getESSServerPort());
        Enabled.setSelected(node.isEnabled());
        Architectures.removeAll();
        Architectures.add("...");
        for(ESS2Architecture arch : frame0.getArchitectures())
            Architectures.add(arch.getTitle());
        Architectures.select(0);
        long oid = node.getArchitecture().getOid();
        if (oid==0)
            return;
        int ii=0;
        for(ESS2Architecture arch : frame0.getArchitectures()){
            if (arch.getOid()==oid){
                Architectures.select(ii+1);
                break;
                }
            ii++;
            }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSeparator1 = new javax.swing.JSeparator();
        Architectures = new java.awt.Choice();
        SetMetaFile = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        Port = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        IP = new javax.swing.JTextField();
        Enabled = new javax.swing.JCheckBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        getContentPane().setLayout(null);
        getContentPane().add(jSeparator1);
        jSeparator1.setBounds(10, 80, 600, 2);
        getContentPane().add(Architectures);
        Architectures.setBounds(20, 100, 220, 20);

        SetMetaFile.setIcon(new javax.swing.ImageIcon(getClass().getResource("/drawable/save.png"))); // NOI18N
        SetMetaFile.setBorderPainted(false);
        SetMetaFile.setContentAreaFilled(false);
        SetMetaFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SetMetaFileActionPerformed(evt);
            }
        });
        getContentPane().add(SetMetaFile);
        SetMetaFile.setBounds(250, 90, 30, 30);

        jLabel1.setText("Port");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(430, 100, 30, 14);

        Port.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                PortKeyPressed(evt);
            }
        });
        getContentPane().add(Port);
        Port.setBounds(460, 100, 60, 25);

        jLabel2.setText("IP");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(290, 100, 30, 14);

        IP.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                IPKeyPressed(evt);
            }
        });
        getContentPane().add(IP);
        IP.setBounds(310, 100, 110, 25);

        Enabled.setText("Разрешено");
        Enabled.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                EnabledItemStateChanged(evt);
            }
        });
        getContentPane().add(Enabled);
        Enabled.setBounds(530, 100, 110, 23);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void SetMetaFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SetMetaFileActionPerformed
        int idx = Architectures.getSelectedIndex();
        long oid=0;
        if (idx!=0) {
            ESS2Architecture arch = panel.getArchitectures().get(idx - 1);
            node.getArchitecture().setOid(arch.getOid());
            oneUpdate("Назначено ESS2Node.architecture: " + node.getTitle() + "->" + arch.getTitle());
            }
        else{
            node.getArchitecture().setOid(0);
            oneUpdate("Не назначена ESS2Node.architecture: " + node.getTitle());
            }
    }//GEN-LAST:event_SetMetaFileActionPerformed

    private void IPKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_IPKeyPressed
        onStringKeyPressed("IP", IP, evt, new I_WizardActionString() {
            @Override
            public void onAction( String value) {
                node.setESSServerIP(value);
            }
        });
    }//GEN-LAST:event_IPKeyPressed

    private void PortKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_PortKeyPressed
        onKeyPressed("Port", Port, evt, new I_WizardAction() {
            @Override
            public void onAction( int value) {
                node.setESSServerPort(value);
            }
        });
    }//GEN-LAST:event_PortKeyPressed

    private void EnabledItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_EnabledItemStateChanged
        node.setEnabled(Enabled.isSelected());
        oneUpdate("Изменено enable: "+Enabled.isSelected());
    }//GEN-LAST:event_EnabledItemStateChanged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(WizardESS2Node.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(WizardESS2Node.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(WizardESS2Node.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(WizardESS2Node.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                //new WizardESS2Connector().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private java.awt.Choice Architectures;
    private javax.swing.JCheckBox Enabled;
    private javax.swing.JTextField IP;
    private javax.swing.JTextField Port;
    private javax.swing.JButton SetMetaFile;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JSeparator jSeparator1;
    // End of variables declaration//GEN-END:variables
}
