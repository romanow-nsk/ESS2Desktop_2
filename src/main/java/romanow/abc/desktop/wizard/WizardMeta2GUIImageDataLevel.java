/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package romanow.abc.desktop.wizard;


import okhttp3.MultipartBody;
import retrofit2.Call;
import romanow.abc.core.API.RestAPICommon;
import romanow.abc.core.constants.Values;
import romanow.abc.core.entity.artifacts.Artifact;
import romanow.abc.core.entity.artifacts.ArtifactList;
import romanow.abc.core.entity.metadata.Meta2Entity;
import romanow.abc.core.entity.metadata.view.Meta2GUIImageDataLevel;
import romanow.abc.core.entity.metadata.view.Meta2GUIImageScriptLevel;
import romanow.abc.core.utils.FileNameExt;
import romanow.abc.desktop.APICall;

import java.awt.*;

/**
 *
 * @author romanow0
 */
public class WizardMeta2GUIImageDataLevel extends WizardMeta2GUI {
    private Meta2GUIImageDataLevel elem;
    private ArtifactList artifacts = new ArtifactList();
    public WizardMeta2GUIImageDataLevel() {
        initComponents();
        }
    public void openForm(WizardBaseView parentView0, Meta2Entity entity0){
        super.openForm(parentView0,entity0);
        resizeHeight(300);
        elem = (Meta2GUIImageDataLevel)  entity;
        WizardRegLinkPanel linkPanel = new WizardRegLinkPanel(10,125,"",elem.getRegLink(),this);
        add(linkPanel);
        Alpha.setText(""+elem.getAlphaProc());
        LowLevel.setText(""+elem.getLowLevel());
        HighLevel.setText(""+elem.getHighLevel());
        WarnLevel.setText(""+elem.getWarnLevel());
        FailLevel.setText(""+elem.getFailLevel());
        ImageH.setText(""+elem.getImageH());
        ImageW.setText(""+elem.getImageW());
        refreshImageList();
        selectCurrentImage();
        }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jCheckBox1 = new javax.swing.JCheckBox();
        jLabel11 = new javax.swing.JLabel();
        ImageH = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        ImageW = new javax.swing.JTextField();
        ImageList = new java.awt.Choice();
        SetImage = new javax.swing.JButton();
        UploadImage = new javax.swing.JButton();
        ImageAlias = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        Alpha = new javax.swing.JTextField();
        HighLevel = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        LowLevel = new javax.swing.JTextField();
        FailLevel = new javax.swing.JTextField();
        WarnLevel = new javax.swing.JTextField();

        jCheckBox1.setText("jCheckBox1");

        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jLabel11.setText("H image");
        getContentPane().add(jLabel11);
        jLabel11.setBounds(20, 180, 50, 16);

        ImageH.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                ImageHKeyPressed(evt);
            }
        });
        getContentPane().add(ImageH);
        ImageH.setBounds(20, 200, 50, 25);

        jLabel14.setText("Alias");
        getContentPane().add(jLabel14);
        jLabel14.setBounds(510, 180, 80, 16);

        ImageW.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                ImageWKeyPressed(evt);
            }
        });
        getContentPane().add(ImageW);
        ImageW.setBounds(80, 200, 50, 25);
        getContentPane().add(ImageList);
        ImageList.setBounds(150, 200, 270, 20);

        SetImage.setIcon(new javax.swing.ImageIcon(getClass().getResource("/drawable/save.png"))); // NOI18N
        SetImage.setBorderPainted(false);
        SetImage.setContentAreaFilled(false);
        SetImage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SetImageActionPerformed(evt);
            }
        });
        getContentPane().add(SetImage);
        SetImage.setBounds(430, 190, 30, 30);

        UploadImage.setIcon(new javax.swing.ImageIcon(getClass().getResource("/drawable/upload.png"))); // NOI18N
        UploadImage.setBorderPainted(false);
        UploadImage.setContentAreaFilled(false);
        UploadImage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UploadImageActionPerformed(evt);
            }
        });
        getContentPane().add(UploadImage);
        UploadImage.setBounds(590, 190, 30, 30);
        getContentPane().add(ImageAlias);
        ImageAlias.setBounds(470, 200, 110, 25);

        jLabel15.setText("W image");
        getContentPane().add(jLabel15);
        jLabel15.setBounds(80, 180, 60, 16);

        jLabel12.setText("Прозрачн.");
        getContentPane().add(jLabel12);
        jLabel12.setBounds(260, 130, 60, 16);

        Alpha.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                AlphaKeyPressed(evt);
            }
        });
        getContentPane().add(Alpha);
        Alpha.setBounds(260, 150, 40, 25);

        HighLevel.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                HighLevelKeyPressed(evt);
            }
        });
        getContentPane().add(HighLevel);
        HighLevel.setBounds(590, 150, 60, 25);

        jLabel13.setText("Уровни: нижний(0%)  авария предупрежд. верхний (100%)");
        getContentPane().add(jLabel13);
        jLabel13.setBounds(330, 130, 330, 16);

        LowLevel.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                LowLevelKeyPressed(evt);
            }
        });
        getContentPane().add(LowLevel);
        LowLevel.setBounds(380, 150, 60, 25);

        FailLevel.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                FailLevelKeyPressed(evt);
            }
        });
        getContentPane().add(FailLevel);
        FailLevel.setBounds(450, 150, 60, 25);

        WarnLevel.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                WarnLevelKeyPressed(evt);
            }
        });
        getContentPane().add(WarnLevel);
        WarnLevel.setBounds(520, 150, 60, 25);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        closeForm();
    }//GEN-LAST:event_formWindowClosing

    private void ImageHKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ImageHKeyPressed
        onKeyPressed("imageH", ImageH, evt, new I_WizardAction() {
            @Override
            public void onAction(int value) {
                elem.setImageH(value);
            }
        });
    }//GEN-LAST:event_ImageHKeyPressed

    private void ImageWKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ImageWKeyPressed
        onKeyPressed("imageW", ImageW, evt, new I_WizardAction() {
            @Override
            public void onAction(int value) {
                elem.setImageW(value);
            }
        });
    }//GEN-LAST:event_ImageWKeyPressed

    private void SetImageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SetImageActionPerformed
        if (artifacts.size()==0)
        return;
        int idx = ImageList.getSelectedIndex();
        Artifact art = idx==0 ? new Artifact() : artifacts.get(idx-1);
        elem.getPicture().setOidRef(art);
        back.onEnter("Выбрана картинка "+art.getTitle());
    }//GEN-LAST:event_SetImageActionPerformed

    private void UploadImageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UploadImageActionPerformed
        FileNameExt fname = main.getInputFileName("Импорт картинок 2.0", "*.*", null);
        final MultipartBody.Part body = RestAPICommon.createMultipartBody(fname);
        new APICall<Artifact>(main) {
            @Override
            public Call<Artifact> apiFun() {
                return main.getService().upload(main.getDebugToken(), Values.ESSImageFileDescription+" "+ImageAlias.getText(), fname.fileName(), body);
                }
            @Override
            public void onSucess(final Artifact art) {
                elem.getPicture().setOidRef(art);
                back.onEnter("Выбрана картинка "+art.getTitle());
                refreshImageList();
                }
            };
    }//GEN-LAST:event_UploadImageActionPerformed

    private void AlphaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_AlphaKeyPressed
        onKeyPressed("alphaProc", Alpha, evt, new I_WizardAction() {
            @Override
            public void onAction(int value) {
                elem.setAlphaProc(value);
            }
        });
    }//GEN-LAST:event_AlphaKeyPressed

    private void HighLevelKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_HighLevelKeyPressed
        onKeyPressed("highLevel", HighLevel, evt, new I_WizardAction() {
            @Override
            public void onAction(int value) {
                elem.setHighLevel(value);
                }
            });
        }//GEN-LAST:event_HighLevelKeyPressed

    private void LowLevelKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_LowLevelKeyPressed
        onKeyPressed("lowLevel", LowLevel, evt, new I_WizardAction() {
            @Override
            public void onAction(int value) {
                elem.setLowLevel(value);
            }
        });
    }//GEN-LAST:event_LowLevelKeyPressed

    private void FailLevelKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_FailLevelKeyPressed
        onKeyPressed("failLevel", FailLevel, evt, new I_WizardAction() {
            @Override
            public void onAction(int value) {
                elem.setFailLevel(value);
            }
        });

    }//GEN-LAST:event_FailLevelKeyPressed

    private void WarnLevelKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_WarnLevelKeyPressed
        onKeyPressed("warnLevel", WarnLevel, evt, new I_WizardAction() {
            @Override
            public void onAction(int value) {
                elem.setWarnLevel(value);
            }
        });

    }//GEN-LAST:event_WarnLevelKeyPressed

    private void selectCurrentImage(){
        long ownOid = elem.getPicture().getOid();
        if (ownOid==0){
            ImageList.select(0);
            return;
        }
        int idx2=1;
        for(Artifact artifact : artifacts){
            if (artifact.getOid()==ownOid){
                ImageList.select(idx2);
                break;
                }
            idx2++;
            }
        }
    private void refreshImageList(){
        new APICall<ArtifactList>(main) {
            @Override
            public Call<ArtifactList> apiFun() {
                return main.getService().getArtifactConditionList(main.getDebugToken(), Values.ArtifactImageType,"",
                        Values.ESSImageFileDescription,"",0,0,0,0);
                }
            @Override
            public void onSucess(ArtifactList oo) {
                artifacts = oo;
                setArtifactsChoice(artifacts,ImageList,elem.getPicture().getOid());
                /*
                ImageList.removeAll();
                artifacts.sortById();
                ImageList.add("...");
                for(Artifact ctr : artifacts)
                    ImageList.add(ctr.getTitle());
                 */
                }
            };
        }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField Alpha;
    private javax.swing.JTextField FailLevel;
    private javax.swing.JTextField HighLevel;
    private javax.swing.JTextField ImageAlias;
    private javax.swing.JTextField ImageH;
    private java.awt.Choice ImageList;
    private javax.swing.JTextField ImageW;
    private javax.swing.JTextField LowLevel;
    private javax.swing.JButton SetImage;
    private javax.swing.JButton UploadImage;
    private javax.swing.JTextField WarnLevel;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    // End of variables declaration//GEN-END:variables
}
