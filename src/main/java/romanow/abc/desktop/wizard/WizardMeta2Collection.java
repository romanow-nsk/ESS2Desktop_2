/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package romanow.abc.desktop.wizard;

import romanow.abc.core.UniException;
import romanow.abc.core.constants.Values;
import romanow.abc.core.entity.metadata.Meta2Collection;
import romanow.abc.core.entity.metadata.Meta2Entity;
import romanow.abc.core.entity.metadata.Meta2Face;
import romanow.abc.desktop.I_Button;
import romanow.abc.desktop.OK;

import java.util.ArrayList;
import java.util.HashMap;

/**
 *
 * @author romanow0
 */
public class WizardMeta2Collection extends WizardBaseView {
    private ArrayList<Meta2Face> list;
    private HashMap<Integer, Integer> idxMap = new HashMap<>();
    private WizardMetaEntitySelector[] choices = new WizardMetaEntitySelector[20];
    private int cnts[] = new int[20];
    /**
     * Creates new form xxx
     */
    public WizardMeta2Collection() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        getContentPane().setLayout(null);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public void openForm(WizardBaseView parentView0, Meta2Entity entity0){
        super.openForm(parentView0,entity0);
        setSize(800,450);
        list = ((Meta2Collection)entity).getList();
        for(int i=0; i<choices.length;i++){
            choices[i]=null;
            }
        choices[Values.MEDataRegister]=new WizardMetaEntitySelector("Источники данных",Values.MEDataRegister,callBack);
        choices[Values.MEBitRegister]=new WizardMetaEntitySelector("Битовые регистры",Values.MEBitRegister,callBack);
        choices[Values.MECommandRegister]=new WizardMetaEntitySelector("Регистры команд",Values.MECommandRegister,callBack);
        choices[Values.MEStateRegister]=new WizardMetaEntitySelector("Регистры состояний",Values.MEStateRegister,callBack);
        choices[Values.MESetting]=new WizardMetaEntitySelector("Уставки",Values.MESetting,callBack);
        choices[Values.MECollection]=new WizardMetaEntitySelector("Коллекции",Values.MECollection,callBack);
        choices[Values.MEArray]=new WizardMetaEntitySelector("Массивы",Values.MEArray,callBack);
        choices[Values.MEBitArray]=new WizardMetaEntitySelector("Массивы битов",Values.MEBitArray,callBack);
        for(int i=0,j=0; i<cnts.length;i++){
            if (choices[i]!=null){
                getContentPane().add(choices[i]);
                choices[i].setBounds(10,80+j*40,750,40);
                j++;
                }
            }
        refreshList();
        invalidate();
        }
    public void refreshList(){
        for(int i=0; i<cnts.length;i++){
            cnts[i]=0;
            }
        for(int i=0; i<cnts.length;i++){
            if (choices[i]!=null){
                choices[i].getList().removeAll();
                }
            }
        idxMap.clear();
        for(int i=0; i<list.size();i++){
            Meta2Entity entity = list.get(i);
            int type = entity.getMetaType();
            idxMap.put(new Integer(type*10000+cnts[type]),i);   // ключ ТИП*1000+послед.номер
            cnts[type]++;
            if (choices[type]!=null)
                choices[type].getList().add(entity.getFullTitle());
            }
        }
    private I_WizardEntitySelector callBack = new I_WizardEntitySelector() {
        @Override
        public void onEdit(int type, int idx) {
            final Integer index = idxMap.get(type*10000+idx);
            if (index==null){
                System.out.println("Ошибка: "+type+","+idx);
                return;
                }
            String ss = openWizardByType(list.get(index.intValue()));
            if (ss!=null)
                System.out.println(ss);
            }
        @Override
        public void onRemove(int type, int idx) {
            final Integer index = idxMap.get(type*10000+idx);
            if (index==null){
                System.out.println("Ошибка: "+type+","+idx);
                return;
                }
            final String title = list.get(index.intValue()).getTitle();
            new OK(300, 300, "Удалить " + title, new I_Button() {
                @Override
                public void onPush() {
                    list.remove(index.intValue());
                    refreshList();
                    back.onEnter("Удален: "+title);
                    }
                });
            }
        @Override
        public void onAdd(int type) {
            try {
                Meta2Face entity = (Meta2Face) Values.createEntityByType("MetaElem",type,"romanow.abc.core.entity.metadata");
                list.add(entity);
                refreshList();
                String ss = openWizardByType(entity);
                if (ss!=null)
                    System.out.println(ss);
                } catch (UniException e) {
                    System.out.println(e.toString());
                    }
            }
        @Override
        public void onSelect(int type, int idx) {}
        };

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(WizardMeta2Collection.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(WizardMeta2Collection.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(WizardMeta2Collection.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(WizardMeta2Collection.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new WizardMeta2Collection().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
