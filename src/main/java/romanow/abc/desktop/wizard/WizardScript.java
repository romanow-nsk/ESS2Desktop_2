/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package romanow.abc.desktop.wizard;


import romanow.abc.core.constants.ConstValue;
import romanow.abc.core.constants.Values;
import romanow.abc.core.entity.subject2area.ESS2ScriptFile;
import romanow.abc.desktop.I_Button;
import romanow.abc.desktop.I_Value;
import romanow.abc.desktop.MainBaseFrame;
import romanow.abc.desktop.OK;

import javax.swing.*;
import java.awt.event.KeyEvent;
import java.util.ArrayList;

/**
 *
 * @author romanow0
 */
public class WizardScript extends javax.swing.JFrame {
    private ArrayList<ConstValue> scriptTypes;
    private MainBaseFrame main;
    private int changeCount=0;
    private int textChangeCount=0;
    private ESS2ScriptFile scriptFile;
    private I_Value<String> saveEvent;
    private String scriptText;
    private boolean start=false;
    public WizardScript(MainBaseFrame main0, ESS2ScriptFile file, String scriptText0, I_Value<String> saveEvent0) {
        initComponents();
        start=true;
        setVisible(true);
        scriptText = scriptText0;
        ScriptText.setText(scriptText);
        main = main0;
        saveEvent = saveEvent0;
        setBounds(200,200,600,600);
        scriptFile  = file;
        scriptTypes = Values.constMap().getGroupList("ScriptType");
        ScriptType.removeAll();
        for(ConstValue vv : scriptTypes)
            ScriptType.add(vv.title());
        ShortName.setText(scriptFile.getShortName());
        Title.setText(scriptFile.getTitle());
        Comment.setText(scriptFile.getComment());
        ChangesCount.setVisible(false);
        SaveChanges.setVisible(false);
        PreCompiled.setSelected(scriptFile.isPreCompiled());
        ServerMode.setSelected(scriptFile.isServerScript());
        for(int i=0;i<scriptTypes.size();i++)
            if (scriptTypes.get(i).value()==scriptFile.getScriptType())
                ScriptType.select(i);
        start=false;
        }
    public void wasChanged(boolean text){
        ChangesCount.setVisible(true);
        SaveChanges.setVisible(true);
        if (text)
            textChangeCount++;
        else
            changeCount++;
        ChangesCount.setText(""+changeCount+"/"+textChangeCount);
        }
    public void onStringKeyPressed(String name,JTextField fld, KeyEvent evt, I_WizardActionString action){
        if(evt.getKeyCode()!=10) return;
        action.onAction(fld.getText());
        if (evt!=null)
            main.viewUpdate(evt,true);
        }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jCheckBox1 = new javax.swing.JCheckBox();
        jSeparator1 = new javax.swing.JSeparator();
        SaveChanges = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        ScriptType = new java.awt.Choice();
        jSeparator2 = new javax.swing.JSeparator();
        ScriptText = new java.awt.TextArea();
        ChangesCount = new javax.swing.JTextField();
        ShortName = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        Comment = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        Title = new javax.swing.JTextField();
        ServerMode = new javax.swing.JCheckBox();
        PreCompiled = new javax.swing.JCheckBox();

        jCheckBox1.setText("jCheckBox1");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });
        getContentPane().setLayout(null);
        getContentPane().add(jSeparator1);
        jSeparator1.setBounds(10, 82, 560, 2);

        SaveChanges.setIcon(new javax.swing.ImageIcon(getClass().getResource("/drawable/save.png"))); // NOI18N
        SaveChanges.setBorderPainted(false);
        SaveChanges.setContentAreaFilled(false);
        SaveChanges.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SaveChangesActionPerformed(evt);
            }
        });
        getContentPane().add(SaveChanges);
        SaveChanges.setBounds(270, 85, 30, 30);

        jLabel10.setText("Тип скрипта");
        getContentPane().add(jLabel10);
        jLabel10.setBounds(20, 95, 80, 14);

        ScriptType.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                ScriptTypeItemStateChanged(evt);
            }
        });
        getContentPane().add(ScriptType);
        ScriptType.setBounds(100, 90, 160, 25);
        getContentPane().add(jSeparator2);
        jSeparator2.setBounds(10, 120, 560, 2);

        ScriptText.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
            }
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
                ScriptTextInputMethodTextChanged(evt);
            }
        });
        ScriptText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                ScriptTextKeyTyped(evt);
            }
        });
        getContentPane().add(ScriptText);
        ScriptText.setBounds(10, 130, 560, 430);

        ChangesCount.setEnabled(false);
        getContentPane().add(ChangesCount);
        ChangesCount.setBounds(310, 90, 40, 25);

        ShortName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                ShortNameKeyPressed(evt);
            }
        });
        getContentPane().add(ShortName);
        ShortName.setBounds(60, 10, 80, 25);

        jLabel1.setText("Название");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(160, 15, 70, 14);

        Comment.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                CommentKeyPressed(evt);
            }
        });
        getContentPane().add(Comment);
        Comment.setBounds(100, 50, 470, 25);

        jLabel2.setText("Комментарий");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(20, 55, 100, 14);

        jLabel3.setText("Имя ");
        getContentPane().add(jLabel3);
        jLabel3.setBounds(20, 15, 40, 14);

        Title.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                TitleKeyPressed(evt);
            }
        });
        getContentPane().add(Title);
        Title.setBounds(230, 10, 340, 25);

        ServerMode.setText("Серверный");
        ServerMode.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                ServerModeItemStateChanged(evt);
            }
        });
        getContentPane().add(ServerMode);
        ServerMode.setBounds(360, 90, 100, 23);

        PreCompiled.setText("Компиляция");
        PreCompiled.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                PreCompiledItemStateChanged(evt);
            }
        });
        getContentPane().add(PreCompiled);
        PreCompiled.setBounds(470, 90, 110, 23);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        if (changeCount!=0 || textChangeCount!=0){
            new OK(200, 200, "Сохранить изменения?", new I_Button() {
                @Override
                public void onPush() {
                    if (textChangeCount!=0)
                        saveEvent.onEnter(scriptText);
                    if (changeCount!=0)
                        saveEvent.onEnter(null);
                    dispose();
                }
            });
            }
        else
            dispose();
    }//GEN-LAST:event_formWindowClosing

    private void SaveChangesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SaveChangesActionPerformed
        if (textChangeCount!=0)
            saveEvent.onEnter(scriptText);
        if (changeCount!=0)
            saveEvent.onEnter(null);
        changeCount=0;
        textChangeCount=0;
        SaveChanges.setVisible(false);
        ChangesCount.setVisible(false);
    }//GEN-LAST:event_SaveChangesActionPerformed

    private void ShortNameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ShortNameKeyPressed
        onStringKeyPressed("shortName", ShortName, evt, new I_WizardActionString() {
            @Override
            public void onAction(String value) {
                scriptFile.setShortName(value);
                wasChanged(false);
            }
        });
    }//GEN-LAST:event_ShortNameKeyPressed

    private void CommentKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_CommentKeyPressed
        onStringKeyPressed("comment", Comment, evt, new I_WizardActionString() {
            @Override
            public void onAction(String value) {
                scriptFile.setComment(value);
                wasChanged(false);
            }
        });
    }//GEN-LAST:event_CommentKeyPressed

    private void TitleKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TitleKeyPressed
        onStringKeyPressed("title", Title, evt, new I_WizardActionString() {
            @Override
            public void onAction(String value) {
                scriptFile.setTitle(value);
                wasChanged(false);
            }
        });
    }//GEN-LAST:event_TitleKeyPressed

    private void ScriptTypeItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_ScriptTypeItemStateChanged
        if (start)
            return;
        ConstValue value = scriptTypes.get(ScriptType.getSelectedIndex());
        scriptFile.setScriptType(value.value());
        wasChanged(false);
    }//GEN-LAST:event_ScriptTypeItemStateChanged

    private void ScriptTextInputMethodTextChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_ScriptTextInputMethodTextChanged
        wasChanged(true);
        scriptText = ScriptText.getText();

    }//GEN-LAST:event_ScriptTextInputMethodTextChanged

    private void ScriptTextKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ScriptTextKeyTyped
        wasChanged(true);
        scriptText = ScriptText.getText();
    }//GEN-LAST:event_ScriptTextKeyTyped

    private void PreCompiledItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_PreCompiledItemStateChanged
        wasChanged(false);
        scriptFile.setPreCompiled(PreCompiled.isSelected());
    }//GEN-LAST:event_PreCompiledItemStateChanged

    private void ServerModeItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_ServerModeItemStateChanged
        if (start)
            return;
        wasChanged(false);
        scriptFile.setServerScript(ServerMode.isSelected());

    }//GEN-LAST:event_ServerModeItemStateChanged

 

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField ChangesCount;
    private javax.swing.JTextField Comment;
    private javax.swing.JCheckBox PreCompiled;
    private javax.swing.JButton SaveChanges;
    private java.awt.TextArea ScriptText;
    private java.awt.Choice ScriptType;
    private javax.swing.JCheckBox ServerMode;
    private javax.swing.JTextField ShortName;
    private javax.swing.JTextField Title;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    // End of variables declaration//GEN-END:variables
}
